# trying to fuck dyno hours in heroku

import os
import telebot
import time
import telebot
import random
import threading
from emoji import emojize
from telebot import types
from pymongo import MongoClient
from emoji import emojize
from requests.exceptions import ReadTimeout
from requests.exceptions import ConnectionError

pokewars_token = os.environ['pokewars_token']
pokewars = telebot.TeleBot(pokewars_token)
bot = pokewars
trigger_token = os.environ['trigger_token']
triggerbot = telebot.TeleBot(trigger_token)
mongo_http=os.environ['mongo_http']
client = MongoClient(mongo_http)
db = client.pokewars
users = db.users
chats = db.chats
vip = [512006137]
brit_id=512006137
games = {}
skills = []
timerss = {}
ban = []
timers = []
idlist=[]
testtriggers={}
i = 0
lol = 0
testmod=0
pokeban = []
symbollist = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
              'v', 'w', 'x', 'y', 'z',
              '–∞', '–±', '–≤', '–≥', '–¥', '–µ', '—ë', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É',
              '—Ñ', '—Ö', '—Ü', '—á', '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è',
              '1', '2', '3', '4', '5', '6', '7', '8', '9', '0']
def medit(message_text, chat_id, message_id, reply_markup=None, parse_mode='Markdown'):
    return bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=message_text, reply_markup=reply_markup,
                                 parse_mode=parse_mode)
triggers= {'–ª–æ—à–∞–¥–∫–∏–Ω': '@loshadkin', '—Å–æ—Å–∏': '–∫–∞–∫ –ë—É–ª–∞—Ç', '–±–æ—Ç —É–ø–∞–ª': '@LOSHADKIN –ò–î–ò –ß–ò–ù–ò–¢–¨ –ë–û–¢–ê, –•–í–ê–¢–ò–¢ –î–†–û–ß–ò–¢–¨', 'loshadkin': '@loshadkin', '–≤–∞—à–∏ –ø–æ–∫–µ–º–æ–Ω—ã': '—ç—Ç–æ –≤–∞—à–∏ –ø–æ–∫–µ–º–æ–Ω—ã', 'sasatt': 'lezhat', '—Å–∞—Å–∞—Ç—å —á–ª–µ–Ω': '–ø–∞—Å—é–∫–∞', '–±—É–ª–∞—Ç': '—Å–æ—Å–∞—Ç—Ç', '–±—Ç': '–ø–ª—è—Å–∞—Ç—Ç', '–±–∏–∑–∞—Ä—Ä': '–ª—É—á—à–∞—è —Ç–∏–º–∞', 'bulat': 'sosatt', '–æ—Å–ª–∏–∫': '—Å–æ—Å–µ—Ç —É —Å–µ–±—è', '–ø–∞—Å—é–∫': '–ø–∏–¥–æ—Ä', '—Å–ª–∞–≤–∞': ' –°–õ–ê–í–ê –£–ö–†–ê–ò–ù–ï –ì–ï–†–û–Ø–ú –°–õ–ê–í–ê', '—Ä–æ—Å—Å–∏—è': '—Å–∞—Å–∞—Ç—Ç', '–∞–Ω–∏–º–µ': '–¢—ã —á—Ç–æ —Å–º–æ—Ç—Ä–∏—à—å –∞–Ω–∏–º–µ? –°–æ—Å–∏ —Ö—É–π —Ç–æ–≥–¥–∞üçÜ', '–≤–∏–Ω–∫–æ': '–£–±–µ—Ä–∏—Ç–µ —ç—Ç–æ–≥–æ –≥–æ–≤–Ω–æ–µ–¥–∞ –æ—Ç –º–µ–Ω—è, –±–ª—è–¥–±', 'huntall': '–í—Å–µ —Ä–∞–≤–Ω–æ –æ–Ω–∏ –Ω–µ –ø—Ä–∏–¥—É—Ç', '–Ω–µ—Ç': '–ø–∏–¥–æ—Ä–∞ –æ—Ç–≤–µ—Ç', '–¥–∞': '–ø–∏–∑–¥–∞', '–±—É–Ω—Ç': 'CAADAgADDwADIcYAARAiXXInVZNiUAI', '–Ω–µ –ø—Ä–∏—Ö–æ–¥—è—Ç': 'CAADAgADDgYAAiVUQBNcQhf8905GbwI', '–∫—Ç–æ': 'CAADAQADSgIAAtg_5wk5IXNJogXh9gI', '–¥–∏–∑–∞–π–Ω–µ—Ä': 'CAADAgADCAADIcYAARBfFBmUxB9V3gI', '—É–∫—Ä–∞–∏–Ω': 'CAADAgADFgADIcYAARAPkK3cV1pXTwI', '–º–æ–Ω–≥–∞': '@gbball', 'brit': '@gbball', '–∞—Ä–≥—É–º–µ–Ω—Ç': '–∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –Ω—É–∂–µ–Ω –ø–∏–¥–æ—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω', '–ø–∏–¥–æ—Ä –æ–±–Ω–∞—Ä—É–∂–µ–Ω': '–ü–∏–¥–æ—Ä –∑–∞—Å–µ–∫—Ä–µ—á–µ–Ω —Ç–≤–æ–π –∞–Ω–∞–ª –Ω–µ –≤–µ—á–µ–Ω', '—Ç–≤–æ—è': '—Ç–≤–æ—è', '–º–æ—è': '–≥–æ–ª–æ–≤–∫–∞ –æ—Ç —Ö—É—è'}


#-----------Release-Code------------------
@triggerbot.message_handler(commands=['gettriggers'])
def gettriggers(m):        
    text = '–¢—Ä–∏–≥–µ—Ä—Ä—ã:\n'
    lisrer = str(triggers).replace('{', '').replace('}', '').split(',')
    luntr = 0
    lentr = len(lisrer)
    while lentr != luntr:
        text += '[' + str(luntr) + '] ' + lisrer[luntr] + '\n'
        luntr += 1
    text.replace("'", '').replace(':', ' - ')
    text = text.split("'")
    text = ''.join(text)
    text = text.replace(': ', ' - ')
    print("ZALUPA\n" + text)    
    triggerbot.send_message(m.chat.id, text)  
@triggerbot.message_handler(commands=['addtrigger'])
def addtrigger(message):         
    try:
        if message.from_user.id == 0:
            return
        text=message.text.split(' ', maxsplit = 1)
        text=text[1]
        text=text.split('/')
        if ',' in text[1]:
            bot.send_message(message.chat.id, '–ó–∞–ø—è—Ç—ã–µ –Ω–µ–ª—å–∑—è!')
            return
        triggers.update({text[0]:text[1]})
        triggerbot.send_message(message.chat.id, '@gbball –Ω–æ–≤—ã–π —Ç—Ä–∏–≥–≥–µ—Ä –µ–±–∞—Ç—å –∏–¥–∏ –∫–æ–ø–∏—Ä—É–π –≤ –∫–æ–¥ —Ç—ã –∂–µ –µ–±–∞–Ω –º–æ–Ω–≥—É –Ω–µ –º–æ–∂–µ—à—å —é–∑–∞—Ç—å –≥–≥–∞–≥–∞–≥–≥–∞')
    except:
        triggerbot.send_message(message.chat.id, '–¢—Ä–∏–≥–≥–µ—Ä –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Ç–∞–∫:\n—Ç–µ–∫—Å—Ç/–æ—Ç–≤–µ—Ç(–∞–π–¥–∏ —Å—Ç–∏–∫–µ—Ä–∞, —Ç–µ–∫—Å—Ç)')
@triggerbot.message_handler(commands=['deltrigger']) 
def deltrigger(message):        
    try:
        if message.from_user.id != 512006137:
            return
        text=message.text.split(' ', maxsplit = 1)
        text=text[1]
        text=text.split('/')
        del triggers[text[0]]
    except Exception as e:
        print("kek")

@triggerbot.message_handler(content_types=["text"])
def triggi(message):
    m = message          
    i = 0
    lol = 0
    text = message.text.lower()
    print(str(triggers))
    for trigger in triggers:
        if trigger in text and lol != 300:
            tts = triggers[trigger]
            try:
                triggerbot.send_sticker(message.chat.id, tts, reply_to_message_id = message.message_id)
                i = 1
            except:
                report(message)
            if i != 1:
                triggerbot.send_message(message.chat.id, tts, reply_to_message_id = message.message_id)
            else:
                pass
            lol = 300
        else:
            pass


#SUKA ACHKO RAZDELITEL-------------------------------------------------------------
@pokewars.message_handler(commands=['evol'])
def evol(m):
    if m.from_user.id == brit_id:  
        txt = m.text.split(' ', 1)
        eval(txt)
@pokewars.message_handler(commands=['pokerub'])
def poketyigfh(m):
    users.update_one({'id': brit_id}, {'$set': {'pokemons2.rubenis': createruby('rubenis', 0)}})

@pokewars.message_handler(commands=['update'])
def spammm(m):
    if m.from_user.id == brit_id:
        #   users.update_many({},{'$set':{'ruby':0}})
        # users.update_many({},{'$set':{'pokemons2':{}}})
        x = users.find({})
        for ids in x:
            for idss in ids['pokemons']:
                try:
                    zzz = ids['pokemons'][idss]['golden']
                except:
                    users.update_one({'id': ids['id']}, {'$unset': {'pokemons.' + idss: 1}})
        print('yes')
 

@pokewars.message_handler(commands=['pokemon'])
def statssss(m):
    kb = types.InlineKeyboardMarkup()
    x = users.find_one({'id': m.from_user.id})
    if x != None:
        for ids in x['pokemons']:
            kb.add(types.InlineKeyboardButton(text=pokemons[ids]['name'],
                                              callback_data=str(m.from_user.id) + ' stats' + ids))
        for ids in x['pokemons2']:
            kb.add(types.InlineKeyboardButton(text=rubypokemons[ids]['name'],
                                              callback_data=str(m.from_user.id) + ' stats' + ids))
        pokewars.send_message(m.chat.id, m.from_user.first_name + ', –°—Ç–∞—Ç—ã –∫–∞–∫–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?',
                         reply_markup=kb)
    else:
        pokewars.send_message(m.chat.id, '–û—à–∏–±–∫–∞!')
                              

@pokewars.message_handler(commands=['tests'])
def tests(m):
    if m.from_user.id == brit_id:
        i = 0
        z = 0
        x = 400000
        while i < x:
            i += 1
            z += 2
            g = random.randint(1, 100)
            if g != 1:
                i -= 1
        print(z)


def huntt(id, chatid, pokemon):
    x = users.find_one({'id': id})
    if pokemon not in rubypokes:
        earned = 0
        i = 0
        try:
            zz = x['pokemons'][pokemon]['golden']
            i = 1
        except:
            pass
        if i == 1:
            users.update_one({'id': id}, {'$set': {'pokemons.' + pokemon + '.hunting': 0}})
        i = 0
        chances = 0
        win = 0
        pokemon = x['pokemons'][pokemon]
        print(pokemon)
        while i < pokemon['cool']:
            i += 1
            chances += 1
            z = random.randint(1, 100)
            if z <= 30 + (pokemon['atk'] * 2):
                win += 1
                earned += 1
            z = random.randint(1, 100)
            if z <= 5 + pokemon['agility']:
                earned += 1
            z = random.randint(1, 100)
            if pokemon['def'] >= 100:
                pokemon['def'] = 99
            if z <= pokemon['def']:
                i -= 1
        z = random.randint(1, 100)
        level = '–Ω–µ—Ç'
        if z <= 100:
            if pokemon['golden'] == 1:
                earned = earned * 2
                level = '–¥–∞'
        pupa = ''
        if pokemon['code'] == 'pupa':
            f = random.randint(1, 100)
            if f <= 35:
                earned += 25000
                pupa = '–ü—É–ø–∞ –∏ –õ—É–ø–∞ —Ö–æ–¥–∏–ª–∏ –∑–∞ –≥–æ–ª–¥–æ–π. –ù–æ –ü–∞—Å—é–∫ –ø–µ—Ä–µ–ø—É—Ç–∞–ª –∏—Ö –∫—Ä—É—Ç–æ—Å—Ç—å, –∏ –õ—É–ø–∞ –ø—Ä–∏–Ω–µ—Å –≥–æ–ª–¥—É –∑–∞ –ü—É–ø—É, –∞ –ü—É–ø–∞ –ó–ê –õ–£–ü–£!!! –ü–æ–ª—É—á–µ–Ω–æ 25–∫ –≥–æ–ª–¥—ã.'
        pokewars.send_message(chatid, '–ü–æ–∫–µ–º–æ–Ω ' + pokemon['name'] + ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + x[
            'name'] + ' –≤–µ—Ä–Ω—É–ª—Å—è —Å –æ—Ö–æ—Ç—ã!\n–ü—Ä–∏–Ω–µ—Å—ë–Ω–Ω–æ–µ –∑–æ–ª–æ—Ç–æ: ' + str(earned) + '\n' +
                         '–£–º–Ω–æ–∂–µ–Ω–æ –ª–∏ –∑–æ–ª–æ—Ç–æ –Ω–∞ 2 (—Ç–æ–ª—å–∫–æ –¥–ª—è –∑–æ–ª–æ—Ç—ã—Ö): ' + level + '\n' + pupa)
        users.update_one({'id': id}, {'$inc': {'money': earned}})

    else:
        earned = 0
        i = 0
        try:
            zz = x['pokemons2'][pokemon]['golden']
            i = 1
        except:
            pass
        if i == 1:
            users.update_one({'id': id}, {'$set': {'pokemons2.' + pokemon + '.hunting': 0}})
        i = 0
        pokemon = x['pokemons2'][pokemon]
        print(pokemon)
        while i < (pokemon['atk'] + int(pokemon['cool'] / 1000)):
            i += 1
            z = random.randint(1, 100)
            if z <= 25 + pokemon['agility']:
                earned += 1
            z = random.randint(1, 100)
            if z <= pokemon['def']:
                i -= 1
        z = random.randint(1, 100)
        level = '–Ω–µ—Ç'
        if z <= 100:
            if pokemon['golden'] == 1:
                earned = earned * 2
                level = '–¥–∞'
        v = random.randint(1, 100)
        gold = 0
        if v <= 20:
            gold = earned * 100000

        pokewars.send_message(chatid, '–ü–æ–∫–µ–º–æ–Ω ' + pokemon['name'] + ' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + x[
            'name'] + ' –≤–µ—Ä–Ω—É–ª—Å—è —Å –æ—Ö–æ—Ç—ã!\n–ü—Ä–∏–Ω–µ—Å—ë–Ω–Ω—ã–µ —Ä—É–±–∏–Ω—ã: ' + str(earned) + '\n' + '–ü—Ä–∏–Ω–µ—Å—ë–Ω–Ω–æ–µ –∑–æ–ª–æ—Ç–æ: ' + str(
            int(gold / 1000)) + '–∫\n'
                                'x2: ' + level)
        users.update_one({'id': id}, {'$inc': {'ruby': earned}})
        users.update_one({'id': id}, {'$inc': {'money': gold}})
            

@pokewars.message_handler(commands=['huntal'])
def huntallll(m):
    if m.from_user.id not in ban:
        x = banns(m.from_user.id, m.from_user.id, m.from_user.first_name)
        if x == 0:
            x = users.find_one({'id': m.from_user.id})
            if x != None:
                pisos=[]
                for ids in x['pokemons']:
                    if x['pokemons'][ids]['hunting'] == 0:
                        users.update_one({'id': m.from_user.id}, {'$set': {'pokemons.' + ids + '.hunting': 1}})
                        t = threading.Timer(1800, huntt, args=[m.from_user.id, m.from_user.id, ids])
                        t.start()
                        pisos.append(x['pokemons'][ids]['code'])
                for ids2 in x['pokemons2']:
                    if x['pokemons2'][ids2]['hunting'] == 0:
                        users.update_one({'id': m.from_user.id}, {'$set': {'pokemons2.' + ids2 + '.hunting': 1}})
                        t = threading.Timer(1800, huntt, args=[m.from_user.id, m.from_user.id, ids2])
                        t.start()
                        pisos.append(x['pokemons'][ids]['code'])
                if len(pisos) > 0:        
                    pokewars.send_message(m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤—Å–µ—Ö –≥–æ—Ç–æ–≤—ã—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤ –Ω–∞ –æ—Ö–æ—Ç—É. –í–µ—Ä–Ω—É—Ç—Å—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç.')
                else:
                    pokewars.send_message(m.chat.id, '–í—Å–µ –ø–æ–∫–µ–º–æ–Ω—ã —É–∂–µ –Ω–∞ –æ—Ö–æ—Ç–µ!')

@pokewars.message_handler(commands=['testhuntal'])
def huntallll(m):
    if m.from_user.id == brit_id:
        x = users.find_one({'id': m.from_user.id})
        if x != None:
            for ids in x['pokemons']:
                if x['pokemons'][ids]['hunting'] == 0:
                    users.update_one({'id': m.from_user.id}, {'$set': {'pokemons.' + ids + '.hunting': 1}})
                    t = threading.Timer(10, huntt, args=[m.from_user.id, m.from_user.id, ids])
                    t.start()
                    pisos.append(x['pokemons'][ids]['code'])
            for ids2 in x['pokemons2']:
                if x['pokemons2'][ids2]['hunting'] == 0:
                    users.update_one({'id': m.from_user.id}, {'$set': {'pokemons2.' + ids2 + '.hunting': 1}})
                    t = threading.Timer(10, huntt, args=[m.from_user.id, m.from_user.id, ids2])
                    t.start()
                    pisos.append(x['pokemons'][ids]['code'])
            if len(pisos) > 0:        
                pokewars.send_message(m.chat.id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤—Å–µ—Ö –≥–æ—Ç–æ–≤—ã—Ö –ø–æ–∫–µ–º–æ–Ω–æ–≤ –Ω–∞ –æ—Ö–æ—Ç—É. –í–µ—Ä–Ω—É—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫.')
            else:
                pokewars.send_message(m.chat.id, '–í—Å–µ –ø–æ–∫–µ–º–æ–Ω—ã —É–∂–µ –Ω–∞ –æ—Ö–æ—Ç–µ!')


@pokewars.message_handler(commands=['mygold'])
def goldd(m):
    x = users.find_one({'id': m.from_user.id})
    if x != None:
        pokewars.send_message(m.chat.id,
                         m.from_user.first_name + ', –≤–∞—à–µ –∑–æ–ª–æ—Ç–æ: ' + str(x['money']) + '\n–†—É–±–∏–Ω—ã: ' + str(x['ruby']))


@pokewars.message_handler(commands=['suckdick'])
def suckdick(m):
    if m.from_user.id not in ban:
        x = banns(m.from_user.id, m.chat.id, m.from_user.first_name)
        if x == 0:
            try:
                users.update_one({'id': m.from_user.id}, {'$inc': {'money': -1}})
                bot.send_message(m.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç—Å–æ—Å–∞–ª–∏ —Ö—É–π—Ü–∞ –∏ –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ 1 –º–æ–Ω–µ—Ç—É.')
                z = random.randint(1, 100)
                if z <= 1:
                    pokewars.send_message(m.chat.id, '–ï–±–∞–Ω—ã–π —Ä–æ—Ç —ç—Ç–æ–≥–æ –∫–∞–∑–∏–Ω–æ –±–ª—è—Ç—å!')
            except:
                pass


@pokewars.message_handler(commands=['gextra'])
def gextra(m):
    if m.from_user.id == brit_id:
        gold = 1
        if gold == 1:
            gold = '(–∑–æ–ª–æ—Ç–æ–π!!!) '
            pokemon = 'gold'
        else:
            gold = ''
            pokemon = ''
        i = 0
        for ids in pokemons:
            i += 1
        pokechance = 40 / (i * 0.06)
        come = []
        for ids in elita:
            come.append(ids)
        if len(come) > 0:
            poke = random.choice(come)
        else:
            poke = random.choice(basepokes)
        kb = types.InlineKeyboardMarkup()
        kb.add(types.InlineKeyboardButton(text='–ü–æ–π–º–∞—Ç—å', callback_data=pokemon + poke))
        me = pokewars.send_message(m.chat.id,
                             '–û–±–Ω–∞—Ä—É–∂–µ–Ω *' + gold + '*–ø–æ–∫–µ–º–æ–Ω ' + pokemons[poke]['name'] + '! –ï–≥–æ –∫—Ä—É—Ç–æ—Å—Ç—å: ' + str(
                                 pokemons[poke]['cool']) + '. –ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–π–º–∞—Ç—å.',
                             reply_markup=kb, parse_mode='markdown')
        pokewars.pin_chat_message(me.chat.id, me.message_id, disable_notification=True)
@pokewars.message_handler(commands=['extra'])
def extra(m):
    if m.from_user.id == brit_id:
        gold = 1
        if gold == 1:
            gold = '(–∑–æ–ª–æ—Ç–æ–π!!!) '
            pokemon = 'gold'
        else:
            gold = ''
            pokemon = ''
        i = 0
        for ids in pokemons:
            i += 1
        pokechance = 40 / (i * 0.06)
        come = []
        for ids in elita:
            come.append(ids)
        if len(come) > 0:
            poke = random.choice(come)
        else:
            poke = random.choice(basepokes)
        kb = types.InlineKeyboardMarkup()
        kb.add(types.InlineKeyboardButton(text='–ü–æ–π–º–∞—Ç—å', callback_data=pokemon + poke))
        me = pokewars.send_message(m.chat.id,
                             '–û–±–Ω–∞—Ä—É–∂–µ–Ω *' + gold + '*–ø–æ–∫–µ–º–æ–Ω ' + pokemons[poke]['name'] + '! –ï–≥–æ –∫—Ä—É—Ç–æ—Å—Ç—å: ' + str(
                                 pokemons[poke]['cool']) + '. –ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–π–º–∞—Ç—å.',
                             reply_markup=kb, parse_mode='markdown')
        pokewars.pin_chat_message(me.chat.id, me.message_id, disable_notification=True)
@pokewars.message_handler(commands=['hunt'])
def hunt(m):
    if m.from_user.id not in ban:
        x = banns(m.from_user.id, m.chat.id, m.from_user.first_name)
        if x == 0:
            kb = types.InlineKeyboardMarkup()
            x = users.find_one({'id': m.from_user.id})
            if x != None:
                for ids in x['pokemons']:
                    if x['pokemons'][ids]['hunting'] != 1:
                        kb.add(types.InlineKeyboardButton(text=pokemons[ids]['name'],
                                                          callback_data=str(m.from_user.id) + ' earn' + ids))
                pokewars.send_message(m.chat.id, m.from_user.first_name + ', –∫–∞–∫–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –æ—Ö–æ—Ç—É?',
                                 reply_markup=kb)
            else:
                pokewars.send_message(m.chat.id, '–û—à–∏–±–∫–∞!')


@pokewars.message_handler(commands=['g—Ñve'])
def give(m):
    if m.from_user.id == brit_id:
        x = m.text.split(' ')
        try:
            golden = ''
            i = 0
            if len(x) > 2:
                if x[2] == 'gold':
                    golden = '*–∑–æ–ª–æ—Ç–æ–π* '
                    i = 1
            users.update_one({'id': m.reply_to_message.from_user.id},
                             {'$set': {'pokemons.' + x[1]: createpoke(x[1], i)}})
            pokewars.send_message(m.chat.id, '–ü–æ–∫–µ–º–æ–Ω ' + golden + pokemons[x[1]]['name'] + ' —É—Å–ø–µ—à–Ω–æ –≤—ã–¥–∞–Ω!',
                             parse_mode='markdown')
        except:
            pass


def banns(id, chatid, name):
    i = 0
    for ids in timerss:
        if timerss[ids]['id'] == id:
            i = 1
    if i == 0:
        print('1')
        timerss.update({id: {'id': id,
                             'messages': 0}})
        t = threading.Timer(15, unwarn, args=[id])
        t.start()
    else:
        print('2')
        timerss[id]['messages'] += 1
        if timerss[id]['messages'] >= 4:
            if id not in ban:
                pokewars.send_message(chatid, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ' + name + ' –º–Ω–æ–≥–æ —Å–ø–∞–º–∏–ª –∏ –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ 20 —Å–µ–∫—É–Ω–¥.')
            ban.append(id)
            tt = threading.Timer(20, unbannn, args=[id])
            tt.start()
            print(ban)
            return 1
    return 0


def unwarn(id):
    try:
        del timerss[id]
        print('UNWARN!!!!!')
    except:
        pass


def unbannn(id):
    print('unbanlaunch')
    try:
        ban.remove(id)
        print('UNBAN!')
    except:
        pass


pokemonlist = eval(os.environ['pokemonlist'])

basepokes = eval(os.environ['basepokes'])

elita = ['pikachu', 'pedro', 'bulbazaur', 'psyduck', 'moxnatka', 'charmander', 'diglet', 'golem', 'sidot', 'traxer',
         'tyxlomon', 'morzh',
         'penisdetrov', 'gandonio', 'spermostrel', 'yebator', 'egg', 'graveler', 'tirog', 'eldro4illo', 'vyper',
         'sizor', 'myavs', 'bulatpidor', 'ebusobak',
         'slagma', 'pupa', 'lupa']

elitaweak = ['moxnatka', 'diglet', 'traxer', 'penis', 'gandonio', 'egg', 'sizor', 'ebusobak', 'ultrapoke']

rubypokes = ['rubenis', 'crystaler', 'blyadomon', 'moldres', 'pupitar', 'aron', 'sfil']

pokemons = eval(os.environ['pokemons'])
rubypokemons = eval(os.environ['rubypokemons'])


# @pokewars.message_handler(commands=['evolve'])
# def evolve(m):
#    x=users.find_one({'id':m.from_user.id})
#    if x!=None:
#     if x['money']>=500:
#      kb=types.InlineKeyboardMarkup()
#      for ids in x['pokemons']:
#        kb.add(types.InlineKeyboardButton(text=pokemons[ids]['name'], callback_data=str(m.from_user.id)+' evolve'+ids))
#      pokewars.send_message(m.chat.id, m.from_user.first_name+', –∫–∞–∫–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —ç–≤–æ–ª—é—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å? –¶–µ–Ω–∞: 500 –≥–æ–ª–¥—ã. –®–∞–Ω—Å: 15%.', reply_markup=kb)


@pokewars.message_handler(commands=['upgrade'])
def upgradee(m):
    word = m.text.split('"')
    if len(word) != 3:
        x = users.find_one({'id': m.from_user.id})
        if x != None:
            if x['money'] >= 200:
                kb = types.InlineKeyboardMarkup()
                star = emojize(':star:', use_aliases=True)
                for ids in x['pokemons']:
                    gold = ''
                    if x['pokemons'][ids]['golden'] == 1:
                        gold = ' (' + star + ')'
                    kb.add(types.InlineKeyboardButton(text=pokemons[ids]['name'] + gold,
                                                      callback_data=str(m.from_user.id) + ' upgrade' + ids))
                for ids in x['pokemons2']:
                    kb.add(types.InlineKeyboardButton(text=rubypokemons[ids]['name'] + ' (‚ô¶Ô∏è)',
                                                      callback_data=str(m.from_user.id) + ' upgrade' + ids))
                pokewars.send_message(m.chat.id,
                                 m.from_user.first_name + ', –∫–∞–∫–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è —É–ª—É—á—à–∏—Ç—å? –¶–µ–Ω–∞: 200 –≥–æ–ª–¥—ã + –∫—Ä—É—Ç–æ—Å—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞/3. –®–∞–Ω—Å: 40%.',
                                 reply_markup=kb)
            else:
                pokewars.send_message(m.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!')
        else:
            pokewars.send_message(m.chat.id, '–û—à–∏–±–∫–∞!')
    else:
        x = users.find_one({'id': m.from_user.id})
        if x != None:
            try:
                yes = 0
                print(word[1])
                for ids in x['pokemons']:
                    if word[1] == x['pokemons'][ids]['name']:
                        yes = 1
                        number = ''
                        pokemon = ids
                if yes == 0:
                    for ids in x['pokemons2']:
                        if word[1] == x['pokemons2'][ids]['name']:
                            yes = 1
                            number = '2'
                            pokemon = ids
                if yes != 0:
                    print('yes!=0')
                    if number == '':
                        cost = int(200 + (x['pokemons' + number][pokemon]['cool'] / 3))
                    elif number == '2':
                        cost = int(15 + (x['pokemons' + number][pokemon]['cool'] / 1000))
                    z = int(word[2])
                    i = 0
                    if z > 100:
                        bot.send_message(m.chat.id, '–ë–æ–ª—å—à–µ —Å—Ç–∞ –Ω–µ–ª—å–∑—è, —Å–∞—Å–∞–º–±–∞!')
                        return
                    finalcost = 0
                    while i < z:
                        i += 1
                        finalcost += cost
                    if number == '':
                        zz = 'money'
                        constt = 40
                        valuta = '–≥–æ–ª–¥—ã'
                    elif number == '2':
                        zz = 'ruby'
                        constt = 60
                        valuta = '—Ä—É–±–∏–Ω–æ–≤'
                    if x[zz] >= finalcost:
                        i = 0
                        atk = 0
                        deff = 0
                        agility = 0
                        cool = 0
                        success = 0
                        while i < z:
                            i += 1
                            g = random.randint(1, 100)
                            bonus = 0
                            abc = ['atk', 'def', 'agility', 'cool']
                            attribute = random.choice(abc)
                            if attribute == 'atk':
                                bonus = random.randint(1, 2)
                                name = '–ê—Ç–∞–∫–∞'

                            elif attribute == 'def':
                                bonus = random.randint(2, 3)
                                name = '–ó–∞—â–∏—Ç–∞'

                            elif attribute == 'agility':
                                bonus = random.randint(2, 3)
                                name = '–õ–æ–≤–∫–æ—Å—Ç—å'

                            elif attribute == 'cool':
                                if number == '':
                                    bonus = random.randint(5, 15)
                                elif number == '2':
                                    bonus = random.randint(200, 800)
                                name = '–ö—Ä—É—Ç–æ—Å—Ç—å'

                            if g <= constt:
                                success += 1
                                if attribute == 'atk':
                                    atk += bonus
                                elif attribute == 'def':
                                    deff += bonus
                                elif attribute == 'agility':
                                    agility += bonus
                                elif attribute == 'cool':
                                    cool += bonus
                        users.update_one({'id': m.from_user.id},
                                         {'$inc': {'pokemons' + number + '.' + pokemon + '.' + 'atk': atk}})
                        users.update_one({'id': m.from_user.id},
                                         {'$inc': {'pokemons' + number + '.' + pokemon + '.' + 'def': deff}})
                        users.update_one({'id': m.from_user.id},
                                         {'$inc': {'pokemons' + number + '.' + pokemon + '.' + 'agility': agility}})
                        users.update_one({'id': m.from_user.id},
                                         {'$inc': {'pokemons' + number + '.' + pokemon + '.' + 'cool': cool}})
                        pokewars.send_message(m.chat.id, '–í—ã —É–ª—É—á—à–∏–ª–∏ –ø–æ–∫–µ–º–æ–Ω–∞ ' + word[1] + ' ' + str(
                            z) + ' —Ä–∞–∑! –ò–∑ –Ω–∏—Ö —É—Å–ø–µ—à–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –±—ã–ª–æ ' + str(
                            success) + '. –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n' +
                                         '–ö—Ä—É—Ç–æ—Å—Ç—å: ' + str(cool) + '\n–ê—Ç–∞–∫–∞: ' + str(atk) + '\n–ó–∞—â–∏—Ç–∞: ' + str(
                            deff) + '\n–õ–æ–≤–∫–æ—Å—Ç—å: ' + str(agility) + '\n\n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ ' + str(
                            finalcost) + ' ' + valuta + '.')
                        users.update_one({'id': m.from_user.id}, {'$inc': {zz: -finalcost}})
                    else:
                        pokewars.send_message(m.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ' + valuta + '! (–Ω—É–∂–Ω–æ ' + str(finalcost) + ')')
                else:
                    pokewars.send_message(m.chat.id, 'not')
            except:
                pass


@bot.message_handler(commands=['sellpoke'])
def sellpoke(m):
    x = users.find_one({'id': m.from_user.id})
    if x != None:
        kb = types.InlineKeyboardMarkup()
        for ids in x['pokemons']:
            kb.add(types.InlineKeyboardButton(text=pokemons[ids]['name'],
                                              callback_data=str(m.from_user.id) + ' sell' + ids))
        bot.send_message(m.chat.id,
                         m.from_user.first_name + ', –∫–∞–∫–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–∞—Ç—å? –¶–µ–Ω–∞=–∫—Ä—É—Ç–æ—Å—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞*5 (–µ—Å–ª–∏ –∑–æ–ª–æ—Ç–æ–π, —Ç–æ *50).',
                         reply_markup=kb)
    else:
        bot.send_message(m.chat.id, '–û—à–∏–±–∫–∞!')


@bot.message_handler(commands=['givegold'])
def givegoldd(m):
    x = m.text.split(' ')
    try:
        golden = ''
        i = 0
        if len(x) == 2:
            gold = int(x[1])
            if gold > 0:
                y = users.find_one({'id': m.from_user.id})
                if y != None:
                    if y['money'] >= gold:
                        users.update_one({'id': m.reply_to_message.from_user.id}, {'$inc': {'money': gold}})
                        users.update_one({'id': m.from_user.id}, {'$inc': {'money': -gold}})
                        bot.send_message(m.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–ª–∏ ' + str(
                            gold) + ' –∑–æ–ª–æ—Ç–∞ –∏–≥—Ä–æ–∫—É ' + m.reply_to_message.from_user.first_name + '!',
                                         parse_mode='markdown')
                    else:
                        bot.send_message(m.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!')
                else:
                    bot.send_message(m.chat.id, '–û—à–∏–±–∫–∞!')
            else:
                bot.send_message(m.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è!')
    except:
        pass

@bot.message_handler(commands=['ggold'])
def givegolddd(m):
    if m.from_user.id == 512006137:
        pass
    else:
        return
    x = m.text.split(' ')
    try:
        golden = ''
        i = 0
        if len(x) == 2:
            gold = int(x[1])
            if True:
                y = users.find_one({'id': m.from_user.id})
                if y != None:
                    if True:
                        users.update_one({'id': m.reply_to_message.from_user.id}, {'$inc': {'money': gold}})
                        bot.send_message(m.chat.id, '–í—ã–¥–∞–Ω–æ ' + str(
                            gold) + ' –∑–æ–ª–æ—Ç–∞ –∏–≥—Ä–æ–∫—É ' + m.reply_to_message.from_user.first_name + '!',
                                         parse_mode='markdown')
                    else:
                        bot.send_message(m.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!')
                else:
                    bot.send_message(m.chat.id, '–û—à–∏–±–∫–∞!')
            else:
                bot.send_message(m.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è!')
    except:
        pass
@bot.message_handler(commands=['buyruby'])
def traderuby(m):
    x = users.find_one({'id': m.from_user.id})
    if x != None:
        y = m.text.split(' ')
        if len(y) == 2:
            try:
                ruby = int(y[1])
                if ruby > 0:
                    i = ruby * 100000
                    if x['money'] >= i:
                        users.update_one({'id': m.from_user.id}, {'$inc': {'money': -i}})
                        users.update_one({'id': m.from_user.id}, {'$inc': {'ruby': ruby}})
                        bot.send_message(m.chat.id, '–í—ã —É—Å–ø–µ—à–Ω–æ –æ–±–º–µ–Ω—è–ª–∏ ' + str(int(i / 1000)) + '–∫ –∑–æ–ª–æ—Ç–∞ –Ω–∞ ' + str(
                            ruby) + ' —Ä—É–±–∏–Ω(–æ–≤)!')
                    else:
                        bot.send_message(m.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞! (–∫—É—Ä—Å: 100–∫ –∑–æ–ª–æ—Ç–∞ –∑–∞ 1 —Ä—É–±–∏–Ω).')
                else:
                    bot.send_message(m.chat.id, '–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –Ω—É–ª—è!')
            except:
                bot.send_message(m.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!')


@bot.message_handler(commands=['pokeshop'])
def pokeshopp(m):
    kb = types.InlineKeyboardMarkup()
    for ids in rubypokes:
        kb.add(types.InlineKeyboardButton(
            text=rubypokemons[ids]['name'] + ' (—Ü–µ–Ω–∞: ' + str(rubypokemons[ids]['cost']) + '‚ô¶Ô∏è)',
            callback_data=str(m.from_user.id) + ' buy' + ids))
    bot.send_message(m.chat.id, '–ö–∞–∫–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?', reply_markup=kb)


@bot.message_handler(commands=['top'])
def toppp(m):
    x = users.find({})
    cool1 = 0
    cool2 = 0
    cool3 = 0
    top2 = {'name': '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}
    top3 = {'name': '–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ'}
    for ids in x:
        if ids['id'] != brit_id:
            summ1 = 0
            for idss in ids['pokemons']:
                summ1 += ids['pokemons'][idss]['cool']
            for idsss in ids['pokemons2']:
                summ1 += ids['pokemons2'][idsss]['cool']
            if summ1 > cool1:
                cool1 = summ1
                top1 = ids
    x = users.find({})
    for ids2 in x:
        if ids2['id'] != brit_id:
            summ2 = 0
            for idss2 in ids2['pokemons']:
                summ2 += ids2['pokemons'][idss2]['cool']
            for idsss2 in ids2['pokemons2']:
                summ2 += ids2['pokemons2'][idsss2]['cool']
            if summ2 > cool2 and summ2 != cool1:
                cool2 = summ2
                top2 = ids2
    x = users.find({})
    for ids3 in x:
        if ids3['id'] != brit_id:
            summ3 = 0
            for idss3 in ids3['pokemons']:
                summ3 += ids3['pokemons'][idss3]['cool']
            for idsss3 in ids3['pokemons2']:
                summ3 += ids3['pokemons2'][idsss3]['cool']
            if summ3 >= cool3 and summ3 != cool2 and summ3 != cool1:
                cool3 = summ3
                top3 = ids3

    bot.send_message(m.chat.id,
                     '–¢–æ–ø-3 –ø–æ –∫—Ä—É—Ç–æ—Å—Ç–∏:\n\n' + '1 –º–µ—Å—Ç–æ: ' + top1['name'] + ' - ' + str(cool1) + '\n' + '2 –º–µ—Å—Ç–æ: ' +
                     top2['name'] + ' - ' + str(cool2) + '\n' + '3 –º–µ—Å—Ç–æ: ' + top3['name'] + ' - ' + str(cool3) + '\n')


@bot.message_handler(commands=['upchance'])
def upchance(m):
    x = users.find_one({'id': m.from_user.id})
    if x != None:
        z = int((x['chancetocatch'] * 200000) + 20000)
        if x['money'] >= z:
            users.update_one({'id': m.from_user.id}, {'$inc': {'money': -z}})
            users.update_one({'id': m.from_user.id}, {'$inc': {'chancetocatch': 0.1}})
            bot.send_message(m.chat.id, '–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ ' + str(z) + ' –∑–æ–ª–æ—Ç–∞. –®–∞–Ω—Å –ø–æ–π–º–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞ —É–≤–µ–ª–∏—á–µ–Ω –Ω–∞ 10%.')
        else:
            bot.send_message(m.chat.id, '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–æ–ª–æ—Ç–∞ (–Ω—É–∂–Ω–æ ' + str(z) + ').')


@bot.message_handler(commands=['createteam'])
def createteam(m):
    pass


@bot.message_handler(commands=['jointeam'])
def jointeam(m):
    pass


@bot.message_handler(commands=['summon'])
def summon(m):
    # if m.from_user.id not in ban:
    #   x=banns(m.from_user.id, m.from_user.id, m.from_user.first_name)
    #   if x==0:
    y = users.find_one({'id': m.from_user.id})
    if y['money'] >= 100:
        x = random.randint(1, 100)
        users.update_one({'id': y['id']}, {'$inc': {'money': -100}})
        if x <= 20:
            bot.send_message(m.chat.id, '–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ 100 –º–æ–Ω–µ—Ç. –í–∞–º —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–∑–≤–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞!!!')
            poke(m.chat.id)
        else:
            bot.send_message(m.chat.id, '–í—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª–∏ 100 –º–æ–Ω–µ—Ç. –í–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–∑–≤–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞.')
    else:
        bot.send_message(m.chat.id, '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!')


def poke(id):
    gold = random.randint(1, 100)
    if gold == 1:
        gold = '(–∑–æ–ª–æ—Ç–æ–π!!!) '
        pokemon = 'gold'
    else:
        gold = ''
        pokemon = ''
    i = 0
    for ids in elita:
        i += 1
    pokechance = 50 / (i * 0.06)
    come = []
    for ids in elita:
        chance = pokechance / (pokemons[ids]['cool'] * 0.02)
        x = random.randint(1, 100)
        if x <= chance:
            come.append(ids)
    if len(come) > 0:
        poke = random.choice(come)
    else:
        poke = random.choice(elitaweak)
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='–ü–æ–π–º–∞—Ç—å', callback_data=pokemon + poke))
    m = bot.send_message(id, '–û–±–Ω–∞—Ä—É–∂–µ–Ω *' + gold + '*–ø–æ–∫–µ–º–æ–Ω ' + pokemons[poke]['name'] + '! –ï–≥–æ –∫—Ä—É—Ç–æ—Å—Ç—å: ' + str(
        pokemons[poke]['cool']) + '. –ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–π–º–∞—Ç—å.', reply_markup=kb,
                         parse_mode='markdown')
    t = threading.Timer(random.randint(300, 600), runpoke, args=[m.message_id, m.chat.id])
    t.start()
    timers.append('1')
    try:
        bot.pin_chat_message(m.chat.id, m.message_id, disable_notification=False)
    except:
        pass


def dailypoke(id):
    x = random.randint(300, 301)
    t = threading.Timer(x, dailypoke, args=[id])
    t.start()
    gold = random.randint(1, 100)
    if gold == 1:
        gold = '(–∑–æ–ª–æ—Ç–æ–π!!!) '
        pokemon = 'gold'
    else:
        gold = ''
        pokemon = ''
    i = 0
    for ids in pokemons:
        i += 1
    pokechance = 95 / (i * 0.06)
    come = []
    for ids in pokemonlist:
        chance = pokechance / (pokemons[ids]['cool'] * 0.01)
        x = random.randint(1, 100)
        if x <= chance:
            come.append(ids)
    if len(come) > 0:
        poke = random.choice(come)
    else:
        poke = random.choice(basepokes)
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='–ü–æ–π–º–∞—Ç—å', callback_data=pokemon + poke))
    m = bot.send_message(id, '–û–±–Ω–∞—Ä—É–∂–µ–Ω *' + gold + '*–ø–æ–∫–µ–º–æ–Ω ' + pokemons[poke]['name'] + '! –ï–≥–æ –∫—Ä—É—Ç–æ—Å—Ç—å: ' + str(
        pokemons[poke]['cool']) + '. –ñ–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –ø–æ–π–º–∞—Ç—å.', reply_markup=kb,
                         parse_mode='markdown')
    t = threading.Timer(random.randint(300, 600), runpoke, args=[m.message_id, m.chat.id])
    t.start()
    timers.append('1')
    bot.pin_chat_message(m.chat.id, m.message_id, disable_notification=False)


def runpoke(mid, cid):
    medit('–í—Ä–µ–º—è –Ω–∞ –ø–æ–∏–º–∫—É –ø–æ–∫–µ–º–æ–Ω–∞ –≤—ã—à–ª–æ.', cid, mid)


@bot.message_handler(commands=['pokes'])
def pokesfgtd(m):
    if m.from_user.id not in ban:
        x = banns(m.from_user.id, m.chat.id, m.from_user.first_name)
        if x == 0:
            x = users.find_one({'id': m.from_user.id})
            if x != None:
                text = ''
                for ids in x['pokemons']:
                    if x['pokemons'][ids]['golden'] == 1:
                        text += '*–ó–æ–ª–æ—Ç–æ–π* '
                    text += x['pokemons'][ids]['name'] + ' - –∫—Ä—É—Ç–æ—Å—Ç—å: ' + str(x['pokemons'][ids]['cool']) + '\n'
                for ids in x['pokemons2']:
                    if x['pokemons2'][ids]['golden'] == 1:
                        text += '*–ó–æ–ª–æ—Ç–æ–π* '
                    text += x['pokemons2'][ids]['name'] + ' - –∫—Ä—É—Ç–æ—Å—Ç—å: ' + str(x['pokemons2'][ids]['cool']) + '\n'
                bot.send_message(m.chat.id, '–í–∞—à–∏ –ø–æ–∫–µ–º–æ–Ω—ã:\n\n' + text, parse_mode='markdown')
            else:
                bot.send_message(m.chat.id, '–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç —á—Ç–æ-–Ω–∏–±—É–¥—å (–Ω–µ –∫–æ–º–∞–Ω–¥—É!).')


def rebootclick():
    global notclick
    notclick = 0


@bot.callback_query_handler(func=lambda call: True)
def inline(call):
    global notclick
    if notclick == 0:
        if 'earn' not in call.data and 'upgrade' not in call.data and 'sell' not in call.data and 'buy' not in call.data and 'stats' not in call.data:
            notclick = 1
            t = threading.Timer(3, rebootclick)
            t.start()
            if call.from_user.id not in pokeban:
                x = users.find_one({'id': call.from_user.id})
                if x != None:
                    text = call.data
                    golden = 0
                    if call.data[0] == 'g' and call.data[1] == 'o' and call.data[2] == 'l' and call.data[3] == 'd':
                        text = call.data[4:]
                        golden = 1
                    chancetocatch = (100 * (x['chancetocatch'] + 1)) / (pokemons[text]['cool'] * 0.03)
                    z = random.randint(0, 100)
                    if z <= chancetocatch:
                        i = 0
                        for ids in x['pokemons']:
                            print(x['pokemons'][ids])
                            if x['pokemons'][ids]['code'] == text:
                                i = 1
                        if i != 1:
                            givepoke(call.data, call.message.chat.id, call.message.message_id,
                                     call.from_user.first_name, call.from_user.id)
                            try:
                                timers.remove('1')
                            except:
                                pass
                        else:
                            if golden == 1 and x['pokemons'][text]['golden'] == 0:
                                users.update_one({'id': call.from_user.id},
                                                 {'$set': {'pokemons.' + text + '.golden': 1}})
                                medit('–ü–æ–∫–µ–º–æ–Ω–∞ *–ó–æ–ª–æ—Ç–æ–π* ' + pokemons[text][
                                    'name'] + ' –ø–æ–π–º–∞–ª ' + call.from_user.first_name + '! –î–∞–Ω–Ω—ã–π –ø–æ–∫–µ–º–æ–Ω —É –Ω–µ–≥–æ —É–∂–µ –±—ã–ª, ' +
                                      '–Ω–æ –æ–±—ã—á–Ω—ã–π. –¢–µ–ø–µ—Ä—å –æ–Ω —Å—Ç–∞–ª –∑–æ–ª–æ—Ç—ã–º!', call.message.chat.id,
                                      call.message.message_id, parse_mode='markdown')
                                timers.remove('1')
                            else:
                                bot.answer_callback_query(call.id, '–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —ç—Ç–æ—Ç –ø–æ–∫–µ–º–æ–Ω!')
                    else:
                        pokeban.append(call.from_user.id)
                        t = threading.Timer(60, unban, args=[call.from_user.id])
                        t.start()
                        bot.send_message(call.message.chat.id,
                                         '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ' + call.from_user.first_name + ' –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–π–º–∞—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞!')
                else:
                    bot.answer_callback_query(call.id, '–°–Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç —á—Ç–æ-–Ω–∏–±—É–¥—å (–Ω–µ –∫–æ–º–∞–Ω–¥—É!).')
            else:
                bot.answer_callback_query(call.id, '–ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É –¥–ª—è –ª–æ–≤–ª–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞!')
        elif 'earn' in call.data:
            text = call.data.split(' ')
            if int(text[0]) == call.from_user.id:
                x = users.find_one({'id': call.from_user.id})
                text = text[1]
                text = text[4:]
                if x['pokemons'][text]['hunting'] == 0:
                    users.update_one({'id': call.from_user.id}, {'$set': {'pokemons.' + text + '.hunting': 1}})
                    medit('–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–∫–µ–º–æ–Ω–∞ ' + pokemons[text]['name'] + ' –Ω–∞ –æ—Ö–æ—Ç—É. –û–Ω –≤–µ—Ä–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ –ø–æ–ª —á–∞—Å–∞.',
                          call.message.chat.id, call.message.message_id)
                    t = threading.Timer(1800, huntt, args=[call.from_user.id, call.from_user.id, text])
                    t.start()
                else:
                    medit('–ü–æ–∫–µ–º–æ–Ω —É–∂–µ –Ω–∞ –æ—Ö–æ—Ç–µ!', call.message.chat.id, call.message.message_id)
            else:
                bot.answer_callback_query(call.id, '–≠—Ç–æ –Ω–µ –≤–∞—à–µ –º–µ–Ω—é!')
        elif 'stats' in call.data:
            text = call.data.split(' ')
            if int(text[0]) == call.from_user.id:
                x = users.find_one({'id': call.from_user.id})
                text = text[1]
                text = text[5:]
                r = ''
                if text in rubypokes:
                    r = '2'
                medit(x['name'] + ', —Å—Ç–∞—Ç—ã –ø–æ–∫–µ–º–æ–Ω–∞ ' + x['pokemons' + r][text]['name'] + ':\n–ö—Ä—É—Ç–æ—Å—Ç—å: ' + str(
                    x['pokemons' + r][text]['cool']) + '\n–ê—Ç–∞–∫–∞: ' + str(x['pokemons' + r][text]['atk']) + '\n' +
                      '–ó–∞—â–∏—Ç–∞: ' + str(x['pokemons' + r][text]['def']) + '\n–õ–æ–≤–∫–æ—Å—Ç—å: ' + str(
                    x['pokemons' + r][text]['agility']), call.message.chat.id, call.message.message_id)
            else:
                bot.answer_callback_query(call.id, '–≠—Ç–æ –Ω–µ –≤–∞—à–µ –º–µ–Ω—é!')
        elif 'sell' in call.data:
            text = call.data.split(' ')
            if int(text[0]) == call.from_user.id:
                x = users.find_one({'id': call.from_user.id})
                text = text[1]
                text = text[4:]
                try:
                    gold = x['pokemons'][text]['cool'] * 5
                    if x['pokemons'][text]['golden'] == 1:
                        gold = x['pokemons'][text]['cool'] * 50
                except:
                    gold = 0
                try:
                    users.update_one({'id': call.from_user.id}, {'$unset': {'pokemons.' + text: 1}})
                    users.update_one({'id': call.from_user.id}, {'$inc': {'money': gold}})
                    medit('–í—ã –ø—Ä–æ–¥–∞–ª–∏ –ø–æ–∫–µ–º–æ–Ω–∞ ' + pokemons[text]['name'] + '!', call.message.chat.id,
                          call.message.message_id)
                except:
                    medit('–£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞!', call.message.chat.id, call.message.message_id)
            else:
                bot.answer_callback_query(call.id, '–≠—Ç–æ –Ω–µ –≤–∞—à–µ –º–µ–Ω—é!')

        elif 'buy' in call.data:
            text = call.data.split(' ')
            if int(text[0]) == call.from_user.id:
                x = users.find_one({'id': call.from_user.id})
                if x != None:
                    text = text[1]
                    text = text[3:]
                    i = 0
                    for ids in x['pokemons2']:
                        if x['pokemons2'][ids]['code'] == text:
                            i = 1
                    if i == 0:
                        if x['ruby'] >= rubypokemons[text]['cost']:
                            users.update_one({'id': x['id']}, {'$inc': {'ruby': -rubypokemons[text]['cost']}})
                            users.update_one({'id': x['id']}, {'$set': {'pokemons2.' + text: createruby(text, 0)}})
                            medit('–í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –ø–æ–∫–µ–º–æ–Ω–∞ ' + rubypokemons[text]['name'] + '!',
                                  call.message.chat.id, call.message.message_id)
                        else:
                            medit('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—É–±–∏–Ω–æ–≤!', call.message.chat.id, call.message.message_id)
                    else:
                        medit('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —ç—Ç–æ—Ç –ø–æ–∫–µ–º–æ–Ω!', call.message.chat.id, call.message.message_id)
            else:
                bot.answer_callback_query(call.id, '–≠—Ç–æ –Ω–µ –≤–∞—à–µ –º–µ–Ω—é!')

        elif 'upgrade' in call.data:
            text = call.data.split(' ')
            if int(text[0]) == call.from_user.id:
                text = text[1]
                text = text[7:]
                if text not in rubypokes:
                    x = users.find_one({'id': call.from_user.id})
                    cost = int(200 + (x['pokemons'][text]['cool'] / 3))
                    if x['money'] >= cost:
                        users.update_one({'id': call.from_user.id}, {'$inc': {'money': -cost}})
                        z = random.randint(1, 100)
                        bonus = 0
                        abc = ['atk', 'def', 'agility', 'cool']
                        attribute = random.choice(abc)
                        if attribute == 'atk':
                            bonus = random.randint(1, 2)
                            name = '–ê—Ç–∞–∫–∞'

                        elif attribute == 'def':
                            bonus = random.randint(2, 3)
                            name = '–ó–∞—â–∏—Ç–∞'

                        elif attribute == 'agility':
                            bonus = random.randint(2, 3)
                            name = '–õ–æ–≤–∫–æ—Å—Ç—å'

                        elif attribute == 'cool':
                            bonus = random.randint(5, 15)
                            name = '–ö—Ä—É—Ç–æ—Å—Ç—å'

                        if z <= 40:
                            users.update_one({'id': call.from_user.id},
                                             {'$inc': {'pokemons.' + text + '.' + attribute: bonus}})
                            medit('–í—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ –ø–æ–∫–µ–º–æ–Ω–∞ ' + x['pokemons'][text][
                                'name'] + '! –£–ª—É—á—à–µ–Ω–æ:\n\n' + name + ': ' + str(bonus) + '\n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ ' + str(
                                cost) + ' –≥–æ–ª–¥—ã.', call.message.chat.id, call.message.message_id)
                        else:
                            medit('–£ –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–ª—É—á—à–∏—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞! –ü–æ—Ç—Ä–∞—á–µ–Ω–æ ' + str(cost) + ' –≥–æ–ª–¥—ã.',
                                  call.message.chat.id, call.message.message_id)
                    else:
                        medit('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ (–Ω—É–∂–Ω–æ ' + str(cost) + ').', call.message.chat.id,
                              call.message.message_id)
                else:
                    x = users.find_one({'id': call.from_user.id})
                    cost = int(15 + (x['pokemons2'][text]['cool'] / 1000))
                    if x['ruby'] >= cost:
                        users.update_one({'id': call.from_user.id}, {'$inc': {'ruby': -cost}})
                        z = random.randint(1, 100)
                        bonus = 0
                        abc = ['atk', 'def', 'agility', 'cool']
                        attribute = random.choice(abc)
                        if attribute == 'atk':
                            bonus = random.randint(1, 2)
                            name = '–ê—Ç–∞–∫–∞'

                        elif attribute == 'def':
                            bonus = random.randint(2, 3)
                            name = '–ó–∞—â–∏—Ç–∞'

                        elif attribute == 'agility':
                            bonus = random.randint(2, 3)
                            name = '–õ–æ–≤–∫–æ—Å—Ç—å'

                        elif attribute == 'cool':
                            bonus = random.randint(200, 800)
                            name = '–ö—Ä—É—Ç–æ—Å—Ç—å'

                        if z <= 60:
                            users.update_one({'id': call.from_user.id},
                                             {'$inc': {'pokemons2.' + text + '.' + attribute: bonus}})
                            medit('–í—ã —É—Å–ø–µ—à–Ω–æ —É–ª—É—á—à–∏–ª–∏ –ø–æ–∫–µ–º–æ–Ω–∞ ' + x['pokemons2'][text][
                                'name'] + '! –£–ª—É—á—à–µ–Ω–æ:\n\n' + name + ': ' + str(bonus) + '\n–ü–æ—Ç—Ä–∞—á–µ–Ω–æ ' + str(
                                cost) + ' —Ä—É–±–∏–Ω–æ–≤.', call.message.chat.id, call.message.message_id)
                        else:
                            medit('–£ –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–ª—É—á—à–∏—Ç—å –ø–æ–∫–µ–º–æ–Ω–∞! –ü–æ—Ç—Ä–∞—á–µ–Ω–æ ' + str(cost) + ' —Ä—É–±–∏–Ω–æ–≤.',
                                  call.message.chat.id, call.message.message_id)
                    else:
                        medit('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä—É–±–∏–Ω–æ–≤ (–Ω—É–∂–Ω–æ ' + str(cost) + ').', call.message.chat.id,
                              call.message.message_id)
            else:
                bot.answer_callback_query(call.id, '–≠—Ç–æ –Ω–µ –≤–∞—à–µ –º–µ–Ω—é!')


def unban(id):
    try:
        pokeban.remove(id)
    except:
        pass


def givepoke(pokemon, id, mid, name, userid):
    golden = 0
    if pokemon[0] == 'g' and pokemon[1] == 'o' and pokemon[2] == 'l' and pokemon[3] == 'd':
        z = len(pokemon)
        pokemon = pokemon[(z - (z - 4)):]
        golden = 1
    text = ''
    if golden == 1:
        text = '*–ó–æ–ª–æ—Ç–æ–π* '
    try:
        medit('–ü–æ–∫–µ–º–æ–Ω–∞ ' + text + pokemons[pokemon]['name'] + ' –ø–æ–π–º–∞–ª ' + name + '!', id, mid, parse_mode='markdown')
        users.update_one({'id': userid}, {'$set': {'pokemons.' + pokemon: createpoke(pokemon, golden)}})
    except:
        pass


@bot.message_handler(content_types=['text'])
def textt(m):
    if users.find_one({'id': m.from_user.id}) == None:
        users.insert_one(createuser(m.from_user.id))
    x = chats.find_one({'id': m.chat.id})
    if x == None:
        chats.insert_one(createchat(m.chat.id))
    if users.find_one({'id': m.from_user.id}) != None:
        users.update_one({'id': m.from_user.id}, {'$set': {'name': m.from_user.first_name}})


def createpoke(pokemon, gold):
    return {'name': pokemons[pokemon]['name'],
            'code': pokemon,
            'cool': pokemons[pokemon]['cool'],
            'golden': gold,
            'lvl': 1,
            'atk': 1,
            'def': 1,
            'agility': 1,
            'hunting': 0
            }


def createruby(pokemon, gold):
    return {'name': rubypokemons[pokemon]['name'],
            'code': pokemon,
            'cool': rubypokemons[pokemon]['cool'],
            'golden': gold,
            'lvl': 2,
            'atk': 1,
            'def': 1,
            'agility': 1,
            'hunting': 0
            }


def createchat(id):
    return {'id': id
            }


def createuser(id):
    return {'id': id,
            'name': None,
            'pokemons': {},
            'chancetocatch': 0,
            'money': 0,
            'pokemons2': {},
            'ruby': 0
            }


        
print('7777')
pokewars.polling(none_stop=True,timeout=600)
